{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User2\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport useDrivePicker from 'react-google-drive-picker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [openPicker, data, authResponse] = useDrivePicker();\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleOpenPicker = () => {\n    setLoading(true);\n    openPicker({\n      clientId: \"648055946887-4er5sea1ghchnroe19sf761l6dtmme4i.apps.googleusercontent.com\",\n      // Add your clientId here\n      developerKey: \"AIzaSyCciSnW0Ap8k_Mxz3kLXC\",\n      // Add your developerKey here\n      viewId: \"DOCS\",\n      showUploadView: true,\n      showUploadFolders: true,\n      supportDrives: true,\n      multiselect: true\n    });\n  };\n  useEffect(() => {\n    if (data) {\n      setLoading(false);\n      setFiles(data.docs);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpenPicker,\n      children: \"Open Google Drive Picker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: files && files.length > 0 ? files.map(file => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: file.name\n      }, file.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No files selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DOeMOXktuHJlu00FRRCo7Z2vWUo=\", false, function () {\n  return [useDrivePicker];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useDrivePicker","jsxDEV","_jsxDEV","App","_s","openPicker","data","authResponse","files","setFiles","loading","setLoading","error","setError","handleOpenPicker","clientId","developerKey","viewId","showUploadView","showUploadFolders","supportDrives","multiselect","docs","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","file","name","id","_c","$RefreshReg$"],"sources":["C:/Users/User2/my-react-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useDrivePicker from 'react-google-drive-picker';\n\nfunction App() {\n  const [openPicker, data, authResponse] = useDrivePicker();\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleOpenPicker = () => {\n    setLoading(true);\n    openPicker({\n      clientId: \"648055946887-4er5sea1ghchnroe19sf761l6dtmme4i.apps.googleusercontent.com\", // Add your clientId here\n      developerKey: \"AIzaSyCciSnW0Ap8k_Mxz3kLXC\", // Add your developerKey here\n      viewId: \"DOCS\",\n      showUploadView: true,\n      showUploadFolders: true,\n      supportDrives: true,\n      multiselect: true\n    });\n  };\n\n  useEffect(() => {\n    if (data) {\n      setLoading(false);\n      setFiles(data.docs);\n    }\n  }, [data]);\n\n  return (\n    <div>\n      <button onClick={handleOpenPicker}>Open Google Drive Picker</button>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <div>\n          {files && files.length > 0 ? (\n            files.map((file) => (\n              <p key={file.id}>{file.name}</p>\n            ))\n          ) : (\n            <p>No files selected</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,IAAI,EAAEC,YAAY,CAAC,GAAGP,cAAc,CAAC,CAAC;EACzD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMgB,gBAAgB,GAAGA,CAAA,KAAM;IAC7BH,UAAU,CAAC,IAAI,CAAC;IAChBN,UAAU,CAAC;MACTU,QAAQ,EAAE,0EAA0E;MAAE;MACtFC,YAAY,EAAE,4BAA4B;MAAE;MAC5CC,MAAM,EAAE,MAAM;MACdC,cAAc,EAAE,IAAI;MACpBC,iBAAiB,EAAE,IAAI;MACvBC,aAAa,EAAE,IAAI;MACnBC,WAAW,EAAE;IACf,CAAC,CAAC;EACJ,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACd,IAAIO,IAAI,EAAE;MACRK,UAAU,CAAC,KAAK,CAAC;MACjBF,QAAQ,CAACH,IAAI,CAACgB,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,CAAChB,IAAI,CAAC,CAAC;EAEV,oBACEJ,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAQsB,OAAO,EAAEV,gBAAiB;MAAAS,QAAA,EAAC;IAAwB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACnElB,OAAO,gBACNR,OAAA;MAAAqB,QAAA,EAAG;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjB1B,OAAA;MAAAqB,QAAA,EACGf,KAAK,IAAIA,KAAK,CAACqB,MAAM,GAAG,CAAC,GACxBrB,KAAK,CAACsB,GAAG,CAAEC,IAAI,iBACb7B,OAAA;QAAAqB,QAAA,EAAkBQ,IAAI,CAACC;MAAI,GAAnBD,IAAI,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAChC,CAAC,gBAEF1B,OAAA;QAAAqB,QAAA,EAAG;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACxB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxB,EAAA,CA5CQD,GAAG;EAAA,QAC+BH,cAAc;AAAA;AAAAkC,EAAA,GADhD/B,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}